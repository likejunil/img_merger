#! /bin/bash

# ------------------------------
#  디렉토리 정보
# ------------------------------
ROOT=${LPAS_ROOT}
TARGET=start.py

CONF=${ROOT}/conf
LOG=${ROOT}/log
DATA=${ROOT}/data
SRC=${ROOT}/src


# ------------------------------
#  파이썬 환경변수 설정
# ------------------------------
PYTHON=python
export PYTHONPATH=${ROOT}
PROC="${PYTHON} ${SRC}/${TARGET}"


# ------------------------------
#  함수
# ------------------------------
start() {
    printf "  1. ${ROOT} 으로 현재 디렉토리를 변경합니다.\n"
    cd ${ROOT}

    printf "  2. ${TARGET} 을 실행합니다.\n"
    if [ "$#" -eq 0 ]; then
        ${PROC}
    elif [ "$#" -eq 1 ]; then
        ${PROC} "$1"
    fi
    
    if [ $? -eq 0 ]; then
        printf "  3. 프로세스가 성공적으로 실행되었습니다. =[$?]\n"
    else
        printf "  3. 프로세스를 실행하지 못했습니다. =[$?]\n"
    fi
    printf "\n"
}

stop() {
    if [ "$#" -eq 0 ]; then
        PID=`ps -ef | grep "${PROC}" | grep -v grep | awk '{print $2}'`
    elif [ "$#" -eq 1 ]; then
        PID=`ps -ef | grep "${PROC}" | grep $1 | grep -v grep | awk '{print $2}'`
    fi

    printf "  1. 현재 실행중인 프로세스의 pid를 확인합니다.\n"
    read -d "" -ra pid <<< "$PID"
	  count=${#pid[@]}

    if [ ${count} -gt 0 ]; then
        printf "  2. 종료 시그널을 전송합니다.\n"
		    ps -ef | grep "${PROC}" | grep -v grep | awk '{print $2}' | xargs kill -TERM
        if [ $? -eq 0 ]; then
        	  printf "  3. 프로세스가 성공적으로 종료되었습니다.\n"
        else
        	  printf "  3. 프로세스를 종료시키지 못했습니다.\n"
        fi
    else
        printf "  2. 실행중인 프로세스가 없습니다.\n"
    fi 
    printf "\n"
}


# ------------------------------
#  프로그램 실행 및 중지, 상태 확인
# ------------------------------
case "$1" in
"start")
    echo ""
    echo " -+-------------------------+-"
    echo "  |  프로그램을 시작하겠다  |"
    echo " -+-------------------------+-"
    echo ""
    if [ "$#" -eq 1 ]; then
        start
    elif [ "$#" -eq 2 ]; then
        start "$2"
    fi
    ;;

"stop")
    echo ""
    echo " -+-------------------------+-"
    echo "  |  프로그램을 종료하겠다  |"
    echo " -+-------------------------+-"
    echo ""
    if [ "$#" -eq 1 ]; then
        stop
    elif [ "$#" -eq 2 ]; then
        stop "$2"
    fi
    ;;

"status")
    echo ""
    echo " -+------------------------------+-"
    echo "  |  프로그램 상태를 확인하겠다  |"
    echo " -+------------------------------+-"
    echo ""
    ;;

"info1")
    echo ""                                                                                                                                      
    echo "----------------------------------------------------------------------------------------------------------------"
    echo "UID        PID  PPID  C STIME TTY          TIME CMD"
    echo "================================================================================================================"

    RESULT_lpas=`ps -ef | grep "${PROC}" | grep -v grep`
    echo "${RESULT_lpas}" 
    echo ""
    ;;

"info2")
    echo ""                                                                                                                                      
    echo "----------------------------------------------------------------------------------------------------------------"
    echo "USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND"
    echo "================================================================================================================"

    RESULT_lpas=`ps aux | grep "${PROC}" | grep -v grep`
    echo "${RESULT_lpas}"                                                                                                                 
    echo ""
    ;;
    
*)
    echo "Usage: $0 [start | stop | info1 | info2]"
    exit 1
    ;;

esac   
